name: eldycare backend CICD

on:
  workflow_dispatch:
  push:
    branches: ["master"]
    paths: "backend/**"
  pull_request:
    branches: ["master"]
    paths: "backend/**"


jobs:
  build-microservices:
    name: build-microservices
    runs-on: ubuntu-latest
    steps:
      - name: Github Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: build
        run: mvn -DskipTests clean install
        working-directory: ./backend

      - name: upload Artifacts for api-gateway
        uses: actions/upload-artifact@v4.0.0
        with:
          name: api-gateway-service
          path: ./backend/api-gateway-service

      - name: upload Artifacts for authentication-service
        uses: actions/upload-artifact@v4.0.0
        with:
          name: authentication-service
          path: ./backend/authentication-service

      - name: upload Artifacts for discovery-service
        uses: actions/upload-artifact@v4.0.0
        with:
          name: discovery-service
          path: ./backend/discovery-service
      
      - name: upload Artifacts for notification-service
        uses: actions/upload-artifact@v4.0.0
        with:
          name: notification-service
          path: ./backend/notification-service
      
      - name: upload Artifacts for reminder-service
        uses: actions/upload-artifact@v4.0.0
        with:
          name: reminder-service
          path: ./backend/reminder-service

      - name: upload Artifacts for user-service
        uses: actions/upload-artifact@v4.0.0
        with:
          name: user-service
          path: ./backend/user-service

  push-to-dockerhub-api-gateway-service:
    name: push-to-dockerhub-api-gateway-service
    runs-on: ubuntu-latest
    needs: build-microservices
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2.1.1
        with:
          name: api-gateway-service
      - name: List contents of the folders
        run: ls -R
      - name: Build & push Docker image api-gateway-service
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: schrodingdong/eldycare-api-gateway-service
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  push-to-dockerhub-discovery-service:
    name: push-to-dockerhub-discovery-service
    runs-on: ubuntu-latest
    needs: build-microservices
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2.1.1
        with:
          name: discovery-service
      - name: List contents of the folders
        run: ls -R
      - name: Build & push Docker image discovery-service
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: schrodingdong/eldycare-discovery-service
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  push-to-dockerhub-authentication-service:
    name: push-to-dockerhub-authentication-service
    runs-on: ubuntu-latest
    needs: build-microservices
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2.1.1
        with:
          name: authentication-service
      - name: List contents of the folders
        run: ls -R
      - name: Build & push Docker image authentication-service
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: schrodingdong/eldycare-authentication-service
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  push-to-dockerhub-notification-service:
    name: push-to-dockerhub-notification-service
    runs-on: ubuntu-latest
    needs: build-microservices
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2.1.1
        with:
          name: notification-service
      - name: List contents of the folders
        run: ls -R
      - name: Build & push Docker image notification-service
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: schrodingdong/eldycare-notification-service
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  push-to-dockerhub-reminder-service:
    name: push-to-dockerhub-reminder-service
    runs-on: ubuntu-latest
    needs: build-microservices
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2.1.1
        with:
          name: reminder-service
      - name: List contents of the folders
        run: ls -R
      - name: Build & push Docker image reminder-service
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: schrodingdong/eldycare-reminder-service
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  push-to-dockerhub-user-service:
    name: push-to-dockerhub-user-service
    runs-on: ubuntu-latest
    needs: build-microservices
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2.1.1
        with:
          name: user-service
      - name: List contents of the folders
        run: ls -R
      - name: Build & push Docker image user-service
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: schrodingdong/eldycare-user-service
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
